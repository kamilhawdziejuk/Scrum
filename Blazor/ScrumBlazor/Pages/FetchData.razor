@page "/fetchdata"

@using System.Threading
@using ScrumBlazor.Data
@inject DailyService DailyService
Timer: @time
@_currentCount

<h1>Daily sequence generator</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (participants == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Timer</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var participant in participants)
            {
                <tr>
                    <td>@participant.Name</td>
                    <td>@participant.Timer</td>
                    <td><button class="btn btn-primary" @onclick="(() => IncrementCount(participant.Nr))">Start</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    Participant[] participants;
    int time;
    protected override async Task OnInitializedAsync()
    {
        participants = await DailyService.GetParticipants(DateTime.Now);

        _updateTimer = new Timer(state => { InvokeAsync(UpdateCounter); }, null, 0, 1000);
    }

    private int Count { get; set; } = 10;

    Timer _updateTimer;
    int _currentCount = 0;

    public void Dispose()
    {
        _updateTimer.Dispose();
    }


    void IncrementCount(int nr)
    {

    }

    async Task UpdateCounter()
    {
        _currentCount++;
        StateHasChanged();
    }

}
